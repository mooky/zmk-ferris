// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &hml LGUI k1  &hml LALT k2  &hml LCTRL k3  &hml LSHFT k4
//#define HRMR(k1,k2,k3,k4) &hmr RSHFT k1  &hmr RCTRL k2  &hmr RALT k3  &hmr RGUI k4

/ {
    /*    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 16 17 18 19 >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 10 11 12 13 >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };
*/

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    /*
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp TAB>;
        };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp BSPC>;
        };
        combo_space {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp ENTER>;
        };
    };
*/

    combos {
        compatible = "zmk,combos";

        combo_kb_nav_toggle {
            bindings = <&tog 4>;
            key-positions = <16 18>;
        };

        combo_bkspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <27 28>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <22 23>;
        };
    };

    behaviors {
        td_esc: td_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ESC";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T        &kp Y      &kp U       &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F      &kp G        &kp H      &kp J       &kp K      &kp L    &kp SQT
&kp Z  &kp X  &kp C  &kp V      &kp B        &kp N      &kp M       &kp COMMA  &kp DOT  &kp FSLH
                     &lt 2 TAB  &kp ENTER    &kp SPACE  &lt 1 BSPC
            >;
        };

        right_layer {
            bindings = <
&kp INS     &kp N1  &kp N2  &kp N3  &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp COLON
&kp DEL     &kp N4  &kp N5  &kp N6  &trans     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp SEMI
&caps_word  &kp N7  &kp N8  &kp N9  &kp N0     &trans    &trans     &trans     &trans     &trans
                            &trans  &kp ESC    &trans    &trans
            >;
        };

        left_layer {
            bindings = <
&trans    &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
                              &trans    &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans          &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &studio_unlock  &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR      &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans          &trans          &trans  &trans
            >;
        };

        kb_nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans    &kp LC(LS(TAB))  &trans          &kp LC(TAB)      &trans
&trans  &trans  &trans  &trans  &trans    &kp HOME  &kp LEFT_ARROW   &kp UP_ARROW    &kp RIGHT_ARROW  &kp INS
&trans  &trans  &trans  &trans  &trans    &kp END   &kp PAGE_DOWN    &kp DOWN_ARROW  &kp PAGE_UP      &kp DEL
                        &trans  &trans    &trans    &trans
            >;
        };
    };
};
